(self.webpackChunkblog_vuepress=self.webpackChunkblog_vuepress||[]).push([[159],{515:(e,l,n)=>{"use strict";n.r(l),n.d(l,{data:()=>r});const r={key:"v-b4ed4f1c",path:"/advanced/architecture.html",title:"架构",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"概览",slug:"概览",children:[]},{level:2,title:"核心流程与 Hooks",slug:"核心流程与-hooks",children:[]}],filePathRelative:"advanced/architecture.md",git:{updatedTime:1621846301e3}}},7746:(e,l,n)=>{"use strict";n.r(l),n.d(l,{default:()=>H});var r=n(6252);const t=(0,r.uE)('<h1 id="架构"><a class="header-anchor" href="#架构">#</a> 架构</h1><h2 id="概览"><a class="header-anchor" href="#概览">#</a> 概览</h2><p><img src="/images/guide/vuepress-architecture-overview.png" alt="vuepress-architecture-overview"></p><p>上图展示了 VuePress 的简要架构：</p><ul><li>Node App 会生成临时文件，包括布局、页面、路由等。</li><li>Bundler 会将 Client App 和临时文件一起进行打包，就像处理一个普通的 Vue SPA 一样。</li></ul><p>作为开发者，你必须要意识到 VuePress 分为两个主要部分： <strong>Node App</strong> 和 <strong>Client App</strong> ，这一点对于开发插件和主题来说都十分重要。</p><ul><li>插件或者主题的入口文件会在 Node App 中被加载，因此它们需要使用 CommonJS 格式。</li><li>客户端文件会在 Client App 中被加载，也就是会被 Bundler 处理。比如布局、组件、App Setup 文件、App Enhance 文件等。它们最好使用 ESM 格式。</li></ul><h2 id="核心流程与-hooks"><a class="header-anchor" href="#核心流程与-hooks">#</a> 核心流程与 Hooks</h2><p><img src="/images/guide/vuepress-core-process.png" alt="vuepress-core-process"></p>',9),u=(0,r.Uk)("上图展示了 VuePress 的核心流程以及 "),i=(0,r.Uk)("插件 API"),s=(0,r.Uk)(" 的 Hooks ："),a=(0,r.Uk)("在 "),p=(0,r.Wm)("strong",null,"init",-1),o=(0,r.Uk)(" 阶段： "),d=(0,r.Wm)("li",null,"主题和插件会被加载。这意味着插件需要在初始化之前使用。",-1),c=(0,r.Uk)("由于我们要使用 markdown-it 来解析 Markdown 文件，因此 "),h=(0,r.Uk)("extendsMarkdown"),k=(0,r.Uk)(" 会在加载页面文件之前调用。"),m=(0,r.Uk)("页面文件会被加载，因此 "),g=(0,r.Uk)("extendsPageOptions"),f=(0,r.Uk)(" Hook 会被调用，用以创建页面。"),W=(0,r.Wm)("li",null,[(0,r.Uk)("在 "),(0,r.Wm)("strong",null,"prepare"),(0,r.Uk)(" 阶段： "),(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,"临时文件会被生成，因此所有和客户端文件相关的 Hooks 会在此处调用。")])],-1),U=(0,r.Uk)("在 "),v=(0,r.Wm)("strong",null,"dev / build",-1),w=(0,r.Uk)(" 阶段： "),A=(0,r.Uk)("Bundler 会被加载。由于 "),C=(0,r.Uk)("alias"),P=(0,r.Uk)(" 和 "),_=(0,r.Uk)("define"),b=(0,r.Uk)(" 依赖于 Bundler 的配置，所以它们会在此处调用。"),H={render:function(e,l){const n=(0,r.up)("RouterLink");return(0,r.wg)(),(0,r.j4)(r.HY,null,[t,(0,r.Wm)("p",null,[u,(0,r.Wm)(n,{to:"/reference/plugin-api.html"},{default:(0,r.w5)((()=>[i])),_:1}),s]),(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[a,p,o,(0,r.Wm)("ul",null,[d,(0,r.Wm)("li",null,[c,(0,r.Wm)(n,{to:"/reference/plugin-api.html#extendsmarkdown"},{default:(0,r.w5)((()=>[h])),_:1}),k]),(0,r.Wm)("li",null,[m,(0,r.Wm)(n,{to:"/reference/plugin-api.html#extendspageoptions"},{default:(0,r.w5)((()=>[g])),_:1}),f])])]),W,(0,r.Wm)("li",null,[U,v,w,(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[A,(0,r.Wm)(n,{to:"/reference/plugin-api.html#alias"},{default:(0,r.w5)((()=>[C])),_:1}),P,(0,r.Wm)(n,{to:"/reference/plugin-api.html#define"},{default:(0,r.w5)((()=>[_])),_:1}),b])])])])],64)}}}}]);